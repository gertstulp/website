{
  "hash": "c823dad271bfa489218e4c07a4fce9b3",
  "result": {
    "markdown": "---\ntitle: \"EVS\"\noutput: html_document\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- read_xlsx(\"EVS.xlsx\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\norder <- c(\"none\", \"1child\", \"2children\", \"3children\", \"4children\", \"5children\", \n           \"6children\", \"7children\", \"8children\", \"9children\", \"10ormore\")\n\nd %>% \n  gather(\"15\":\"100\", key = \"age\", value = \"N \") %>%\n  rename(\"preference\" = \"age: respondent (constructed)\",\n         \"N\" = \"N \") %>%\n  mutate(preference = factor(preference, levels = order),\n         preference = fct_recode(preference, \n                                 \"1\" = \"1child\", \n                                 \"2\" = \"2children\", \n                                 \"3\" = \"3children\", \n                                 \"4\" = \"4children\", \n                                 \"5+\" = \"5children\", \n                                 \"5+\" = \"6children\", \n                                 \"5+\" = \"7children\", \n                                 \"5+\" = \"8children\", \n                                 \"5+\" = \"9children\",\n                                 \"5+\" = \"10ormore\")) -> long\n\nlong <- long %>% filter(age >= \"18\" & age <= \"35\" & preference != \"none\")\n\nsm <- long %>% \n  dplyr::group_by(Study, preference) %>%\n  dplyr::summarise(N_C = sum(N, na.rm = TRUE)) %>%\n  group_by(Study) %>% \n  mutate(N_S = sum(N_C, na.rm = TRUE),\n         prop = round(N_C * 100 / N_S, 0))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Study'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstds <- c(\"EVS1981\", \"ISSP1988\", \"EVS1990\", \"ISSP1994\", \"GGP2003\", \"GGP2006\")\n\nggplot(sm, aes(x = preference, y = prop, fill = preference)) +\n  geom_col() +\n  facet_wrap(~ factor(Study, levels = stds), nrow = 1) +\n  guides(fill = FALSE) +\n  scale_fill_viridis_d()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n```\n:::\n\n::: {.cell-output-display}\n![](EVS_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsm <- sm %>%\n  mutate(year = case_when(\n    Study == \"EVS1981\" ~ 1981,\n    Study == \"ISSP1988\" ~ 1988,\n    Study == \"EVS1990\" ~ 1990,\n    Study == \"ISSP1994\" ~ 1994,\n    Study == \"GGP2003\" ~ 2003,\n    Study == \"GGP2006\" ~ 2006\n  ))\n\nggplot(sm, aes(x = year, y = prop, colour = preference)) +\n  geom_point() +\n  geom_line() +\n  #guides(fill = FALSE) +\n  scale_colour_viridis_d()\n```\n\n::: {.cell-output-display}\n![](EVS_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "EVS_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}